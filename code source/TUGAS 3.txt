-- ================ Annual Product Category Quality Analysis ================

-- Performa bisnis eCommerce tentunya sangat berkaitan erat dengan produk-produk yang tersedia di dalamnya
-- Menganalisis kualitas dari produk dalam eCommerce dapat memberikan keputusan untuk mengembangkan bisnis dengan lebih baik
--  Dalam Tugas 2 ini, Anda akan menganalisis performa dari masing-masing kategori produk yang ada dan bagaimana kaitannya dengan pendapatan perusahaan.

-- *Tahapan Pengerjaan Tugas*
-- 1. Membuat tabel yang berisi informasi pendapatan/revenue perusahaan total untuk masing-masing tahun
--    Hint: Revenue adalah harga barang dan juga biaya kirim. Pastikan juga melakukan filtering terhadap order status yang tepat untuk menghitung pendapatan
-- 2. Membuat tabel yang berisi informasi jumlah cancel order total untuk masing-masing tahun
--    Hint: Perhatikan filtering terhadap order status yang tepat untuk menghitung jumlah cancel order
-- 3. Membuat tabel yang berisi nama kategori produk yang memberikan pendapatan total tertinggi untuk masing-masing tahun
--    Hint: Perhatikan penggunaan window function dan juga filtering yang dilakukan
-- 4. Membuat tabel yang berisi nama kategori produk yang memiliki jumlah cancel order terbanyak untuk masing-masing tahun
--    Hint: Perhatikan penggunaan window function dan juga filtering yang dilakukan
-- 5. Menggabungkan informasi-informasi yang telah didapatkan ke dalam satu tampilan tabel
--    Hint: Perhatikan teknik join yang dilakukan serta kolom-kolom yang dipilih

-- ========== 1. Membuat tabel yang berisi informasi pendapatan/revenue perusahaan total untuk masing-masing tahun ==========
-- Hint: Revenue adalah harga barang dan juga biaya kirim. Pastikan juga melakukan filtering terhadap order status yang tepat untuk menghitung pendapatan
-- ------- Create Table Total Revenue Year --------
-- step => aggregate from column: price+freight_value, then join with table orders_dataset to get year and order_status data

CREATE TABLE total_revenue_year AS
WITH revenue_orders AS(
	SELECT
		order_id,
		FLOOR(SUM(price + freight_value)) AS revenue
	FROM order_items_dataset oi
	GROUP BY 1
	)
	SELECT
		DATE_PART('year', o.order_purchase_timestamp) AS year,
		SUM(po.revenue) AS revenue
	FROM orders_dataset o
	JOIN revenue_orders po
	ON o.order_id = po.order_id
	WHERE o.order_status = 'delivered'
	GROUP BY 1
	ORDER BY 1;

-- ========== 2. Membuat tabel yang berisi informasi jumlah cancel order total untuk masing-masing tahun ==========
-- Hint: Perhatikan filtering terhadap order status yang tepat untuk menghitung jumlah cancel order
-- step: agregate numbers of orders then filter 'canceled' from order_status column in order_staus column 

CREATE TABLE total_canceled_orders_year AS
SELECT 
	DATE_PART('year', o.order_purchase_timestamp) AS year,
	COUNT(order_id) AS total_canceled_order
FROM orders_dataset o
WHERE order_status = 'canceled'
GROUP BY 1
ORDER BY 1;

-- ========== 3. Membuat tabel yang berisi nama kategori produk yang memberikan pendapatan total tertinggi untuk masing-masing tahun =====
-- Hint: Perhatikan penggunaan window function dan juga filtering yang dilakukan
-- step => Create CTE for total revenue per category each year, then using ROW_NUMBER() to rank revenue and filter where order_status = 'delivery'

CREATE TABLE top_revenue_category_year AS
WITH revenue_category_orders AS(
	SELECT
		DATE_PART('year', o.order_purchase_timestamp) AS year,
		pd.product_category_name,
		FLOOR(SUM(price + freight_value)) AS revenue,
		ROW_NUMBER() OVER(
			PARTITION BY DATE_PART('year', o.order_purchase_timestamp)
			ORDER BY SUM(price + freight_value) DESC
		) AS RANK
	FROM orders_dataset o
	JOIN order_items_dataset oi
	ON o.order_id = oi.order_id
	JOIN products_dataset pd
	ON oi.product_id = pd.product_id
	WHERE order_status = 'delivered'
	GROUP BY 1,2
)
SELECT
	year,
	product_category_name,
	revenue
FROM revenue_category_orders
WHERE RANK = 1;

-- ========== 4. Membuat tabel yang berisi nama kategori produk yang memiliki jumlah cancel order terbanyak untuk masing-masing tahun ==========
-- Hint: Perhatikan penggunaan window function dan juga filtering yang dilakukan
-- step => Create CTE for number of product per category each year, then using ROW_NUMBER() to rank revenue and filter where order_status = 'canceled'


CREATE TABLE top_canceled_category_year AS
WITH canceled_category_orders AS(
	SELECT
		DATE_PART('year', o.order_purchase_timestamp) AS year,
		pd.product_category_name,
		COUNT(*) total_canceled,
		ROW_NUMBER() OVER(
			PARTITION BY DATE_PART('year', o.order_purchase_timestamp)
			ORDER BY COUNT(*) DESC
		) AS RANK
	FROM orders_dataset o
	JOIN order_items_dataset oi
	ON o.order_id = oi.order_id
	JOIN products_dataset pd
	ON oi.product_id = pd.product_id
	WHERE order_status = 'canceled'
	GROUP BY 1,2
)
SELECT
	year,
	product_category_name,
	total_canceled
FROM canceled_category_orders
WHERE RANK = 1;

-- ========== 5. Menggabungkan informasi-informasi yang telah didapatkan ke dalam satu tampilan tabel
-- Hint: Perhatikan teknik join yang dilakukan serta kolom-kolom yang dipilih
-- Initialing table:
-- * total_revenue_year = t1
-- * total_canceled_orders_year = t2
-- * top_revenue_category_year = t3
-- * top_canceled_category_year = t4

SELECT
	t3.year,
	t3.product_category_name AS top_product_by_category,
	floor(t3.revenue) AS revenue_by_category,
	floor(t1.revenue) AS total_revenue_year,
	t4.product_category_name AS top_product_canceled_by_category,
	t4.total_canceled AS total_product_canceled_by_category,
	t2.total_canceled_order AS total_canceled_order_year
FROM top_revenue_category_year t3
JOIN total_revenue_year t1
ON t3.year = t1.year
JOIN top_canceled_category_year t4
ON t3.year = t4.year
JOIN total_canceled_orders_year t2
ON t3.year = t2.year;


